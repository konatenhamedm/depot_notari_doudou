
{% block page_content %}

    <div class="modal-header bg-secondary-gradient">
        <h2 class="modal-title" style="margin-top: -15px;color: white">EDITION-{{ titre | upper  }}</h2>
        <button class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">Ã—</span>
        </button>
    </div>
    {% form_theme form 'widget/fields-custom.html.twig' %}
    {{ form_start(form, {'attr': {'role':'form', 'class': 'form'}}) }}
    <div class="modal-body form-card">
        <div class="contenu" style="margin-top: -10px">
            <div class="row">
                <div class="col-md-12">
                    {{ include('_includes/ajax/response.html.twig') }}
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 ">
                    {{ form_row(form.dateCreation) }}
                </div>
                <div class="col-md-6 ">
                    {{ form_row(form.numeroOuverture) }}
                </div>

            </div>
            <div class="row">
               {#  <div class="col-md-12"> {{ form_row(form.objet) }}</div>
 #}
                 <div class="col-md-6 ">
                    {{ form_row(form.objet) }}
                </div>
                <div class="col-md-6 ">
                    {{ form_row(form.conservation) }}
                </div>
            </div>
            <div class="row">
                <div class="col-md-12"> {{ form_row(form.description) }}</div>
            </div>
              <div class="row">
                <div class="col-md-6"> {{ form_row(form.montantTotal) }}</div>
                <div class="col-md-6"> {{ form_row(form.numeroRepertoire) }}</div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
       <button class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
        <button class="btn btn-primary btn-ajax">Valider</button>
    </div>
    {{ form_end(form) }}


{% endblock %}
{#{% include 'admin/macros/fichier.html.twig'  %}#}


{% block javascripts %}

   

    <script>
     init_select2(null, null, '.form-card');
        $(function () {
             $('.no-auto').each(function () {
                const $this = $(this);
                const $id = $('#' + $this.attr('id'));
                init_date_picker($id,  'down', (start, e) => {
                    //$this.val(start.format('DD/MM/YYYY'));
                }, null, null, false);

                $id.on('apply.daterangepicker', function (ev, picker) {
                    $(this).val(picker.startDate.format('DD/MM/YYYY'));
                });
            });
        });
let commaCounter = 10;

    function numberSeparator(_number) {
        _number += '';

       

        for (let i = 0; i < commaCounter; i++) {
            _number = _number.replace(' ', '');
        }

        x = _number.split('.');
        y = x[0];
        z = x.length > 1 ? '.' + x[1] : '';
        let rgx = /(\d+)(\d{3})/;

        while (rgx.test(y)) {
            y = y.replace(rgx, '$1' + ' ' + '$2');
        }
        commaCounter++;
        return y + z;
    }


    function convertNumber(number, convert = true, round = false) {
       
        let val = parseFloat(String(number).replace(/\s/g, ''));
        if (convert) {
            
            if (round) {
                val = Math.round(val);
            } else {
                val = Math.ceil(val);
            }
          
        }
       
        if (isNaN(val)) {
            return '';
        }
        return val;
    }

    function setValue(number, convert = true, round = false) {
        return numberSeparator(convertNumber(number, convert, round)) || '0';
    }

            $(document).on('keypress , paste', '.input-money', function(e) {
        if (/^-?\d*[,.]?(\d{0,3},)*(\d{3},)?\d{0,3}$/.test(e.key)) {
            $('.input-money').on('input', function() {
                const $this = $(this);
                let val = +$this.val();
                e.target.value = numberSeparator(e.target.value);
                
               
                if ($this.attr('data-max')) {
                    const max = +$this.attr('data-max');
                    if (val > max) {
                        e.target.value = numberSeparator(max);
                    }
                }

                $this.trigger('update-value', [e.target.value, this]);
            });
        } else {
            e.preventDefault();
            return false;
        }
    });
    </script>

{% endblock %}

